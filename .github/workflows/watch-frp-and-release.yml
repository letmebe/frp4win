name: Watch FRP and Create Custom Release

on:
  schedule:
    - cron: '0 0 1 * *'
    # - cron: '*/30 * * * *' # 每半小时运行一次
  workflow_dispatch: # 支持手动触发

jobs:
  check-release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Get latest version from GitHub API
        id: get_version
        run: |
          LATEST_VERSION=$(curl -s "https://api.github.com/repos/fatedier/frp/releases/latest" | grep '"tag_name":' | sed -E 's/.*"([^"]+)".*/\1/')
          echo "version=$LATEST_VERSION" >> $GITHUB_ENV

      - name: Check if current version already exists as a release
        id: check-existing-release
        run: |
          set -e

          # 获取当前版本号
          CURRENT_VERSION=${{ env.version }}

          # 检查当前仓库是否已有该版本的 release
          response=$(curl -s -H "Authorization: Bearer ${{ secrets.GH_TOKEN }}" \
            "https://api.github.com/repos/${{ github.repository }}/releases/tags/$CURRENT_VERSION")

          # 提取 release 名称字段
          release_name=$(echo "$response" | grep '"name":' | head -n1 | sed -E 's/.*"([^"]+)".*/\1/')

          echo "Existing release name: $release_name"

          # 判断是否是我们发布的 custom build
          if [[ "$release_name" == "Custom Build for $CURRENT_VERSION" ]]; then
            echo "This version has already been released. Skipping."
            echo "SKIP_RELEASE=true" >> $GITHUB_ENV
            exit 0
          else
            echo "No existing custom release found, proceeding..."
          fi

      - name: Download Windows AMD64 ZIP
        if: env.version != ''
        run: |
          VERSION=${{ env.version }}
          FILENAME="frp_${VERSION#v}_windows_amd64.zip"
          URL="https://github.com/fatedier/frp/releases/download/${VERSION}/${FILENAME}"
          echo "Downloading: $URL"
          curl -L -o "$FILENAME" "$URL"

      - name: Extract ZIP
        if: env.version != ''
        uses: montudor/action-zip@v1
        with:
          args: unzip -qq *.zip -d .

      - name: Add custom install.bat
        if: env.version != ''
        run: |
          unzip_dir=$(echo frp_*/)
          sudo chown -R runner:docker "$unzip_dir"
          chmod -R u+w "$unzip_dir"
          cp custom-files/install.bat "$unzip_dir/"
          cp custom-files/frpcs.xml "$unzip_dir/"

      - name: Repack into new ZIP (same name)
        if: env.version != ''
        run: |
          unzip_dir=$(echo frp_*/)
          original_zip=$(ls frp_*.zip)
          rm -f "$original_zip"
          zip -r "$original_zip" "$unzip_dir"
          echo "NEW_ZIP=$original_zip" >> $GITHUB_ENV

      - name: Create GitHub Release and Upload Asset
        if: env.version != '' && env.NEW_ZIP != ''
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ env.version }}
          name: Custom Build for ${{ env.version }}
          body: Auto-generated custom build with frpcs.exe、frpcs.xml、install.bat added.
          draft: false
          prerelease: false
          files: ${{ env.NEW_ZIP }}
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}